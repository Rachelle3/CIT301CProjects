function Set() {
	
	
	this.intersection = function(listA, listB) {
    
	   var resultList = [];
       
	if(listA == null || listB==null) { // check for invalid inputs
        return null; // exit and return null to indicate an error
    }

for (var i =0; i <listA.length; i++) {// for every elemenet in listA
    var nextValue = listA[i]; //get next value in the list

    //for every element in listB
    for (var j = 0; j < listB.length; j++) {
        if (listB[j] === nextValue) { // this ListB element equals nextValue
            resultList.push(listB[j]); //add ListB element to end of 'resultList
            break; // break out of (exit) the ListB inner loop
        }

    }

}
	   return resultList;
	}
    
    
    
	this.union = function(listA, listB) {

	   var resultList = [];

        if(listA == null || listB==null) { //// check for invalid inputs
            return null; // exit and return null to indicate an error

        }

        var sdif=this.symmetricDifference(listA, listB);
        var inter=this.intersection(listA, listB);
        for(var i=0; i<sdif.length; i++){
            resultList.push(sdif[i]);

        }

        for(var i=0; i<inter.length; i++){
            resultList.push(inter[i]);
        }



	   return resultList;
	}




	this.relativeComplement = function(listA, listB) {

	   var resultList = [];

	   if (listA == null || listB===null){
	       return null;
       }

       var Bvalues=[];


       for(var i=0; i<listB.length; i++){
	       Bvalues[listB[i]]=true;
       }

       for(var i=0; i<listA.length; i++){
           if(!Bvalues[listA[i]]){
               resultList.push(listA[i]);
           }
       }

       
	   return resultList;
	}



	this.symmetricDifference = function(listA, listB) {

	   var resultList = [];

        if (listA == null || listB===null){
            return null;
        }

        var relA=this.relativeComplement(listA, listB);
        var relB=this.relativeComplement(listB, listA);

        for(var i=0; i<relA.length; i++){
            resultList.push(relA[i]);
        }

        for(var i=0; i<relB.length; i++){
            resultList.push(relB[i]);
        }
       

       
	   return resultList;
	}	
	

}
